*sublime-syntax.txt*	Vim filetype plugin for sublime-syntax and its test file.
Wu Zhenyu                                                     *sublime-syntax*

==============================================================================
CONTENTS                                             *sublime-syntax-contents*
  1. Introduction.......................................|sublime-syntax-intro|
  2. Configuration.....................................|sublime-syntax-config|
  3. Functions......................................|sublime-syntax-functions|

==============================================================================
INTRODUCTION                                            *sublime-syntax-intro*

NOTE: Don't edit this file directly! <doc/sublime-syntax.txt> is generated by
<https://github.com/google/vimdoc>. See <README.md> for more information about
installation and screenshots.

Note: if you use |indentLine|, remember:
>
    let g:indentLine_fileTypeExclude = ['syntax_test']
<
If you use |coc-diagnostic|, remember:
>
    {
      "diagnostic-languageserver": {
        "filetypes": {
          "syntax_test": "syntest"
        }
      }
    }
<
If you use |coc-nvim|, remember:
>
    let g:coc_filetype_map = {
          \ 'sublime_syntax': 'yaml',
          \ }
<
If you use |nvim-treesitter|, remember:
>
    -- https://github.com/nvim-treesitter/nvim-treesitter#adding-parsers
    local ft_to_parser = require"nvim-
    treesitter.parsers".filetype_to_parsername
    ft_to_parser.sublime_syntax = "yaml"
<

==============================================================================
CONFIGURATION                                          *sublime-syntax-config*

                                   *sublime-syntax:g:sublime_syntax#cache_dir*
Completion cache directory.
Default: s:cache_dir_home . '/sublime-syntax.vim' `

                                 *sublime-syntax:g:sublime_syntax#scope_items*
Completion scope cache contents. For program.

https://www.sublimetext.com/docs/scope_naming.html
Default: s:scope_items `

                                *sublime-syntax:g:sublime_syntax#syntax_items*
Completion syntax cache contents. For program.

https://www.sublimetext.com/docs/syntax.html
Default: s:syntax_items `

                                *sublime-syntax:g:sublime_syntax#syntax_names*
Syntax names. For program.

                                 *sublime-syntax:g:sublime_syntax#scope_names*
Scope names. For program.

                                         *sublime-syntax:b:syntax_test_syntax*
|b:current_syntax| may not exist. 'syntax' may be incorrect "ON" when modeline
change filetype. So we use 'filetype'.
Default: empty(&filetype) ? expand('%:e') : &filetype `

                                        *sublime-syntax:b:syntax_test_comment*
Use the first word of the first line to be default comment symbol. If the
first line is blank, use 'commentstring'.

http://www.sublimetext.com/docs/syntax.html#testing

==============================================================================
FUNCTIONS                                           *sublime-syntax-functions*

coc#source#sublime_syntax#init()            *coc#source#sublime_syntax#init()*
  https://github.com/neoclide/coc.nvim/wiki/Create-custom-source

coc#source#sublime_syntax#complete({opt}, {cb})
                                        *coc#source#sublime_syntax#complete()*
  Only complete when the line is appropriate.

sublime_syntax#update_cache({cache_name})      *sublime_syntax#update_cache()*
  Update cache. {cache_name} can be "syntax" or "scope".

syntax_test#init()                                        *syntax_test#init()*
  Set b:syntax_test_syntax and b:syntax_test_comment, because |rainbow_csv|
  detects |b:current_syntax|, so use a new variable.

  If filetype detect fails, (e.g., |rainbow_csv| uses |autocmd| |Syntax| to
  change filetype) you can assign it manually.
>
      call syntax_test#init('csv')
<

syntax_test#detect()                                    *syntax_test#detect()*
  if b:syntax_test_syntax or b:syntax_test_comment doesn't exist, call
  |syntax_test#init()|. if they exist, do nothing.


vim:tw=78:ts=8:ft=help:norl:
